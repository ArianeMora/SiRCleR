% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sircleRCM.R
\name{makeSircleStatModel}
\alias{makeSircleStatModel}
\title{sircleVAE}
\usage{
makeSircleStatModel(
  rcmFile,
  patientSampleFile,
  methFile,
  methSampleFile,
  rnaFile,
  rnaSampleFile,
  proteinFile,
  proteinSampleFile,
  sampleLabelColumn,
  conditionColumn,
  patientIdColumn,
  configVAEFile,
  RegulatoryLabel,
  fromSaved = F,
  casesForTraining = NULL,
  outputFolder = "",
  runName = "VAE",
  normalise = "rows",
  missingMethod = "mean",
  verbose = T,
  outputFileName = "SiRCle_RCM.csv",
  logfile = "logfileRCM.csv",
  envName = NULL,
  condaEnvName = NULL,
  envPath = NULL
)
}
\arguments{
\item{rcmFile}{Output from running sircleRCM}

\item{patientSampleFile}{File which has columns with the sample information}

\item{methFile}{File which has the data from the DNA methylation, this should be already filtered to be a single value (e.g. CpG beta value) for each gene, with the gene ID as the rownames of this file, and the columns associated with a specific samples' values}

\item{methSampleFile}{File with the sample data corresponding to the samples in the methFile (i.e. is the sample tumour or normal, what other meta info you have)}

\item{rnaFile}{File which has the data from the RNAseq, expect it to be normalised (e.g. log2(TMM + 1), should use the same gene IDs as in the methylation file}

\item{rnaSampleFile}{File with the sample data corresponding to the samples in the rnaFile (i.e. is the sample tumour or normal, what other meta info you have)}

\item{proteinFile}{File which has the data from the proteomics, this should be already be normalised and associated to genes, with the gene ID as the rownames of this file, and the columns associated with a specific samples' values}

\item{proteinSampleFile}{File with the sample data corresponding to the samples in the proteinFile (i.e. is the sample tumour or normal, what other meta info you have)}

\item{sampleLabelColumn}{Column name in each of the sample files which corresponds to the sample label in the respective file (e.g. the label which has the column names in e.g. proteinFile, this has to be the same in all of your sample DFs)}

\item{conditionColumn}{Column name in each of the sample files which corresponds to the sample label in the respective file (e.g. the label which has the column names in e.g. proteinFile, this has to be the same in all of your sample DFs)}

\item{patientIdColumn}{Column name in each of the sample files which corresponds to the sample label in the respective file (e.g. the label which has the column names in e.g. proteinFile, this has to be the same in all of your sample DFs)}

\item{configVAEFile}{Filename of the config.json (see scivae for description.)}

\item{RegulatoryLabel}{Regulatory label of interest (e.g. "Regulation_Grouping_1", "Regulation_Grouping_2", "Regulation_Grouping_3" )}

\item{fromSaved}{\emph{Optional: } Whether you're reloading from a saved run \strong{Default=F}}

\item{casesForTraining}{\emph{Optional: } If you're training this is necessary it is a list of case IDs (in the column patientIDcolumn) \strong{Default=NULL}}

\item{outputFolder}{\emph{Optional: } path to the folder wih the data \strong{Default=NULL}}

\item{runName}{\emph{Optional: } Name of the run, useful for reloading saved versions \strong{Default="VAE"}}

\item{normalise}{\emph{Optional: } How to normalise the data \strong{Default="rows"}}

\item{missingMethod}{\emph{Optional: } How to fill in the missing data. \strong{Default="mean"}}

\item{verbose}{\emph{Optional: } How to fill in the missing data. \strong{Default=T}}

\item{envName}{\emph{Optional: } Name of your previously setup python virtual environment \strong{Default=NULL}}

\item{condaEnvName}{\emph{Optional: } Name of your previously setup python conda environment \strong{Default=NULL}}

\item{envPath}{\emph{Optional: } Path as a string to your previously setup python \strong{Default=NULL}}

\item{geneId}{Gene ID column name in you dataframe}
}
\value{
sv a trained model for performing statistics
}
\description{
Uses scircm to compute the regulatory clustering model.
}
