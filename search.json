[{"path":"/articles/ChooseSettings.html","id":"sircle-regulatory-clustering-model","dir":"Articles","previous_headings":"","what":"SiRCle Regulatory Clustering Model","title":"SiRCle RCM Rules","text":"sircleRCM_2Cond() Lastly, enable application SiRCle RCM two data layers choice, provide sircleRCM_2Cond() function. one can either input two different data layers, also data layers (e.g. RNAseq comparing KO versus WT hypoxia normoxia). options take account protein expression data layer closest phenotype, yet time lowest coverage. want give full flexibility user hence two 6-state-6-state transitions data layers, total 36 possible “flows”. next chapters discuss choose “Background method (BG)”, “Regulation Grouping (RG)” thresholds/cutoffs input data.","code":""},{"path":"/articles/ChooseSettings.html","id":"background-method-bg","dir":"Articles","previous_headings":"","what":"1. Background method (BG)","title":"SiRCle RCM Rules","text":"Background setting defines, features considered clusters. example two data layers, RNAseq proteomics, include features (= genes) detected data layers, removing rest features.","code":""},{"path":"/articles/ChooseSettings.html","id":"three-data-layers-methylation-rnaseq-and-proteomics","dir":"Articles","previous_headings":"1. Background method (BG)","what":"Three data layers: Methylation, RNAseq and Proteomics","title":"SiRCle RCM Rules","text":"1.1. - 1.7. goes restrictive least restrictive. Hence chosen background method define number genes included sircleRCM input. Given proteomics data lowest coverage three input data layers (Proteomics, RNAseq DNA-methylation), proteomics data layer lowest number detected genes (=features) hence biggest impact number genes included sircleRCM input.1.1. P&M&R stringend background setting lead small number genes mainly dependent proteins detected (proteomics data layer), since proteomics lowest coverage three omics.1.2. P&R background ensures detect gene Proteomics RNAseq. Similar 1.1, yet less stringent gene need detected DNA-Methylation.1.3. P|(M&R) Focus protein expression. Even though unlikely P&M&R (1.1.) P&R (1.2.) excludes many proteins, protein excluded detected RNAseq /DNA-methylation data layer. Hence, background P | (M&R) (1.2.) ensures include detected proteins (= features proteomics data layer). hand also include genes detected protein layer (proteomics data), mRNA (RNAseq data) DNA-methylation (DNA-methylation data).1.4. (P&M)|(P&R) background ensures detect gene Proteomics one two data layers. Similar 1.1, yet less stringent gene need detected RNAseq DNA-Methylation.1.5. (P&M)|(P&R)|(M&R) background ensures detect gene least two three data layers. Hence, focus moves away protein layer (proteomics data layer) number genes detected proteomics data layer increase comparison P & M & R (1.1.) P | (M&R) (1.2.).1.6. P|R gene included SiRCle input detected one two data layers (proteomics RNAseq).1.7. P|M|R Least stringent background method, since gene included SiRCle input detected one three data layers (proteomics, RNAseq DNA-methylation).","code":""},{"path":"/articles/ChooseSettings.html","id":"two-data-layers-rnaseq-and-proteomics","dir":"Articles","previous_headings":"1. Background method (BG)","what":"Two data layers: RNAseq and Proteomics","title":"SiRCle RCM Rules","text":"discussed , often RNAseq Proteomics conducted, hence sircleRCM_RP() function focusing two data layers requiring DNA-methylation data. turn background methods following 1.1. - 1.4. restrictive least restrictive: 1.1. P&R stringend background setting lead small number genes mainly dependent proteins detected (proteomics data layer), since proteomics lower coverage compared RNAseq.1.2. P Focus protein expression. Even though unlikely P&R (1.1.) excludes many proteins, protein excluded detected RNAseq data layer. Hence, background ensures include detected proteins (= features proteomics data layer).1.3. R Focus mRNA expression. P&R (1.1.) exclude many genes mRNA data layer, hence background ensures include detected mRNAs (= features RNAseq data layer).1.4. P|R Least stringent background method, since gene included SiRCle input detected one two data layers (proteomics RNAseq).","code":""},{"path":"/articles/ChooseSettings.html","id":"two-data-sets","dir":"Articles","previous_headings":"1. Background method (BG)","what":"Two data sets","title":"SiRCle RCM Rules","text":"one can either input two different data layers two different conditions data layer. turn background methods following 1.1. - 1.4. restrictive least restrictive:1.1. C1&C2 stringend background setting lead small number genes.1.2. C1 Focus gene expression Condition 1 (C1).1.3. C2 Focus gene expression Condition 2 (C2).1.4. C1|C2 Least stringent background method, since gene included SiRCle input detected one two conditions.","code":""},{"path":"/articles/ChooseSettings.html","id":"input-data-threshold","dir":"Articles","previous_headings":"","what":"2. Input data threshold","title":"SiRCle RCM Rules","text":"can set two different thresholds, one differential expression, mostly Log2FC RNAseq proteomics data layer Differential Methylated Regions (DMR) DNA-methylation, one significance (e.g. p.adj). define feature (= e.g. gene) assigned : 1. “”, means feature significantly -regulated underlying comparison. 2. “”, means feature significantly -regulated underlying comparison. 3. “Change”, means feature change significantly underlying comparison /defined -regulated/-regulated based Log2FC threshold chosen. Given protein expression data layer closest phenotype, yet time lowest coverage, “Change” subdivided four states protein data layer: 1. “Detected”, means feature detected underlying data layer. 2. “Significant”, means feature significant underlying comparison. 3. “Significant negative”, means feature significant underlying comparison differential expression positive, yet meet threshold set “” (e.g. Log2FC >1 = “” significant Log2FC=0.8). 4. “Significant positive”, means feature significant underlying comparison differential expression positive, yet meet threshold set “”. definition done individually data layer,(proteomics, RNAseq, DNA-methylation) impact SiRCle cluster gene sorted . latter discussed detail (see “3. Regulation Grouping (RG)”).","code":""},{"path":"/articles/ChooseSettings.html","id":"regulation-grouping-rg","dir":"Articles","previous_headings":"","what":"3. Regulation Grouping (RG)","title":"SiRCle RCM Rules","text":"Table 1: Regulatory Grouping (RG) 1-4 sircleRCM_MRP() function Lastly, worth mentioning case RNAseq proteomics data available sircleRCM_RP() used, stays , yet flows resulting SiRCle clusters include DNA-methylation available. Using sircleRCM_2Cond() based two input data, provide RG1_All, RG2_Significant taking account genes significant (, , significant positive, significant negative) RG3_SignificantChange takes account genes significant changes (, ).","code":""},{"path":"/articles/ChooseSettings.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"SiRCle RCM Rules","text":"","code":"## ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── ##  setting  value ##  version  R version 4.4.1 (2024-06-14 ucrt) ##  os       Windows 10 x64 (build 19045) ##  system   x86_64, mingw32 ##  ui       RTerm ##  language en ##  collate  English_United Kingdom.utf8 ##  ctype    English_United Kingdom.utf8 ##  tz       Europe/Berlin ##  date     2025-01-08 ##  pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown) ##  ## ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── ##  package     * version date (UTC) lib source ##  bslib         0.8.0   2024-07-29 [1] CRAN (R 4.4.1) ##  cachem        1.1.0   2024-05-16 [1] CRAN (R 4.4.1) ##  cli           3.6.3   2024-06-21 [1] CRAN (R 4.4.1) ##  colorspace    2.1-1   2024-07-26 [1] CRAN (R 4.4.1) ##  desc          1.4.3   2023-12-10 [1] CRAN (R 4.4.1) ##  digest        0.6.37  2024-08-19 [1] CRAN (R 4.4.1) ##  dplyr       * 1.1.4   2023-11-17 [1] CRAN (R 4.4.1) ##  evaluate      1.0.1   2024-10-10 [1] CRAN (R 4.4.2) ##  fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.4.1) ##  forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.4.1) ##  fs            1.6.4   2024-04-25 [1] CRAN (R 4.4.1) ##  generics      0.1.3   2022-07-05 [1] CRAN (R 4.4.1) ##  ggplot2     * 3.5.1   2024-04-23 [1] CRAN (R 4.4.1) ##  glue          1.7.0   2024-01-09 [1] CRAN (R 4.4.1) ##  gtable        0.3.6   2024-10-25 [1] CRAN (R 4.4.2) ##  hms           1.1.3   2023-03-21 [1] CRAN (R 4.4.1) ##  htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.4.1) ##  htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.4.1) ##  jquerylib     0.1.4   2021-04-26 [1] CRAN (R 4.4.1) ##  jsonlite      1.8.9   2024-09-20 [1] CRAN (R 4.4.1) ##  kableExtra  * 1.4.0   2024-01-24 [1] CRAN (R 4.4.1) ##  knitr         1.49    2024-11-08 [1] CRAN (R 4.4.2) ##  lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.4.1) ##  lubridate   * 1.9.3   2023-09-27 [1] CRAN (R 4.4.1) ##  magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.4.1) ##  munsell       0.5.1   2024-04-01 [1] CRAN (R 4.4.1) ##  pillar        1.10.1  2025-01-07 [1] CRAN (R 4.4.1) ##  pkgconfig     2.0.3   2019-09-22 [1] CRAN (R 4.4.1) ##  pkgdown       2.1.1   2024-09-17 [1] CRAN (R 4.4.1) ##  purrr       * 1.0.2   2023-08-10 [1] CRAN (R 4.4.1) ##  R6            2.5.1   2021-08-19 [1] CRAN (R 4.4.1) ##  ragg          1.3.3   2024-09-11 [1] CRAN (R 4.4.1) ##  readr       * 2.1.5   2024-01-10 [1] CRAN (R 4.4.1) ##  rlang         1.1.4   2024-06-04 [1] CRAN (R 4.4.1) ##  rmarkdown   * 2.29    2024-11-04 [1] CRAN (R 4.4.2) ##  rstudioapi    0.17.1  2024-10-22 [1] CRAN (R 4.4.2) ##  sass          0.4.9   2024-03-15 [1] CRAN (R 4.4.1) ##  scales        1.3.0   2023-11-28 [1] CRAN (R 4.4.1) ##  sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.4.1) ##  stringi       1.8.4   2024-05-06 [1] CRAN (R 4.4.0) ##  stringr     * 1.5.1   2023-11-14 [1] CRAN (R 4.4.1) ##  svglite       2.1.3   2023-12-08 [1] CRAN (R 4.4.1) ##  systemfonts   1.1.0   2024-05-15 [1] CRAN (R 4.4.1) ##  textshaping   0.4.0   2024-05-24 [1] CRAN (R 4.4.1) ##  tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.4.1) ##  tidyr       * 1.3.1   2024-01-24 [1] CRAN (R 4.4.1) ##  tidyselect    1.2.1   2024-03-11 [1] CRAN (R 4.4.1) ##  tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.4.1) ##  timechange    0.3.0   2024-01-18 [1] CRAN (R 4.4.1) ##  tzdb          0.4.0   2023-05-12 [1] CRAN (R 4.4.1) ##  vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.4.1) ##  viridisLite   0.4.2   2023-05-02 [1] CRAN (R 4.4.1) ##  withr         3.0.2   2024-10-28 [1] CRAN (R 4.4.2) ##  xfun          0.49    2024-10-31 [1] CRAN (R 4.4.2) ##  xml2          1.3.6   2023-12-04 [1] CRAN (R 4.4.1) ##  yaml          2.3.10  2024-07-26 [1] CRAN (R 4.4.1) ##  ##  [1] C:/Users/chris/AppData/Local/R/win-library/4.4 ##  [2] C:/Program Files/R/R-4.4.1/library ##  ## ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/articles/DataAnalysisExample.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"SiRCleR Tutorial","text":"latest development version SiRCleR package can install GitHub :","code":"#BiocManager::install(\"ArianeMora/SiRCleR\")  #For the latest development version use: #devtools::install_github(\"https://github.com/ArianeMora/SiRCleR\")  library(SiRCleR)  #load dependencies: library(tidyverse)"},{"path":"/articles/DataAnalysisExample.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input Data","title":"SiRCleR Tutorial","text":"Load example data:","code":"# Load the data from inst/extdata within the SiRCleR package: DNAmeth <- SiRCleR::ToyData(\"DNA_Methylation\") mRNA <- SiRCleR::ToyData(\"RNAseq\") Proteomics <- SiRCleR::ToyData(\"Proteomics\")"},{"path":[]},{"path":"/articles/DataAnalysisExample.html","id":"regulatory-clustering-model-rcm","dir":"Articles","previous_headings":"Run SiRCleR functions","what":"Regulatory Clustering Model (RCM)","title":"SiRCleR Tutorial","text":"perform SiRCle clustering using DNA-methylation, RNAseq proteomics data hence use function sircleRCM_MRP(), MRP referring DNA-Methylation, RNAseq Proteomics. different column names Log2FC p.adjusted value /want use different cutoffs change parameters default. Please check vignette choose settings ChooseSettings including Background Method, input data thresholds Regulation Grouping anything unclear. case DNA-methylation data, RNAseq proteomics data, can use function sircleRCM_RP(), RP referring RNAseq Proteomics.","code":"SiRCleR::sircleRCM_MRP(methFile=DNAmeth,                       rnaFile=mRNA,                       protFile=Proteomics,                       geneID=\"gene_name\",                       backgroundMethod=\"P|(M&R)\",                       OutputFileName = \"Sircle_RCM_MRP\") SiRCleR::sircleRCM_RP(rnaFile=mRNA,                       protFile=Proteomics,                       geneID=\"gene_name\",                       backgroundMethod=\"P&R\",                       OutputFileName = \"Sircle_RCM_RP\")"},{"path":"/articles/DataAnalysisExample.html","id":"enrichment-analysis-on-sircle-clusters","dir":"Articles","previous_headings":"Run SiRCleR functions","what":"Enrichment analysis on SiRCle clusters","title":"SiRCleR Tutorial","text":"Dependent prior knowledge choose provide address different biological questions: 1. Gene-sets: interested biological processes pathways altered SiRCle clusters, can use gene-sets KEGG(Kanehisa Goto 2000) Hallmarks(Liberzon et al. 2015) can found platforms MSigDB. 2. TF-regulon: interested transcription factors driving changes SiRCle clusters, can use regulon information platforms DecoupleR function sircleORA() can perform Representation Analysis (ORA) SiRCle cluster. Depending prior knowledge provided via parameter PriorKnowledge, pathway enrichment analysis transcription-factor activity estimation performed. perform Presentation Analysis (ORA) SiRCle clustser. can either done using GO-terms signature human mouse data providing pathway file choice.","code":""},{"path":"/articles/DataAnalysisExample.html","id":"pathway-enrichment-analysis","dir":"Articles","previous_headings":"Run SiRCleR functions > Enrichment analysis on SiRCle clusters","what":"Pathway enrichment analysis","title":"SiRCleR Tutorial","text":"Hallmarks gene-set (Liberzon et al. 2015) downloaded MSigDB available package SiRCle can loaded using function ToyData().","code":"# Load a pathway file of interest: Hallmarks <- SiRCleR::ToyData(\"Hallmarks\")  # Run pathway enrichment analysis SiRCleR::sircleORA(InputData=Sircle_RCM_MRP,                    geneID= \"geneID\",                    regLabels=\"RG3_Protein\",                    PriorKnowledge=Hallmarks,                    PKName=\"Hallmarks\",                    minGSSize=5,                    maxGSSize=1000 ,                    Plot_p.adj=0.2,                    Plot_Percentage=5,                    OutputFileName='PathwayEnrichment') ## Number of genes in None: 9497 ## ## Number of genes in TPDE: 551 ## Number of genes in TMDS: 944 ## Number of genes in MDE: 1487 ## Number of genes in MDS: 662 ## Number of genes in TPDS: 1001 ## Number of genes in TMDE: 324"},{"path":"/articles/DataAnalysisExample.html","id":"transcription-factor-analysis","dir":"Articles","previous_headings":"Run SiRCleR functions > Enrichment analysis on SiRCle clusters","what":"Transcription factor analysis","title":"SiRCleR Tutorial","text":"TF-regulons can found different resources. recommend use ColleCTRI (Müller-Dott et al. 2023) can loaded via decoupleR (Badia--Mompel et al. 2022).","code":"# Load TF regulon: CollectriReg <- decoupleR::get_collectri(organism='human', split_complexes=FALSE)[,c(1:2)]%>%   dplyr::rename(\"term\"=\"source\",                 \"gene\"=\"target\") CollectriReg$Description <- CollectriReg$term write.csv(CollectriReg, paste(\"SiRCleRCM/TF-Regulon_decoupleR-get_collectri_\",format(Sys.Date(), \"%d.%m.%Y\") ,\".csv\", sep=\"\"))#It is always recommended to save the prior knwoeldge that was used in your analysis  # Run transcription factor enrichment analysis SiRCleR::sircleORA(InputData=Sircle_RCM_MRP,                    geneID= \"geneID\",                    regLabels=\"RG3_Protein\",                    PriorKnowledge=CollectriReg,                    PKName=\"CollectriReg\",                    minGSSize=5,                    maxGSSize=1000 ,                    Plot_p.adj=0.2,                    Plot_Percentage=15,                    OutputFileName='TFActivity') ## Number of genes in None: 9497 ## No terms made the thresholds set for None ## Number of genes in TPDE: 551 ## Number of genes in TMDS: 944 ## Number of genes in MDE: 1487 ## Emapplot not plotted for MDE due to too many terms ## Number of genes in MDS: 662 ## Number of genes in TPDS: 1001 ## Number of genes in TMDE: 324"},{"path":"/articles/DataAnalysisExample.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"SiRCleR Tutorial","text":"","code":"## ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── ##  setting  value ##  version  R version 4.4.1 (2024-06-14 ucrt) ##  os       Windows 10 x64 (build 19045) ##  system   x86_64, mingw32 ##  ui       RTerm ##  language en ##  collate  English_United Kingdom.utf8 ##  ctype    English_United Kingdom.utf8 ##  tz       Europe/Berlin ##  date     2025-01-08 ##  pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown) ##  ## ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── ##  package          * version   date (UTC) lib source ##  AnnotationDbi      1.66.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  ape                5.8       2024-04-11 [1] CRAN (R 4.4.1) ##  aplot              0.2.3     2024-06-17 [1] CRAN (R 4.4.1) ##  backports          1.5.0     2024-05-23 [1] CRAN (R 4.4.0) ##  Biobase            2.64.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  BiocGenerics       0.50.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  BiocParallel       1.38.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  Biostrings         2.72.1    2024-06-02 [1] Bioconductor 3.19 (R 4.4.0) ##  bit                4.5.0     2024-09-20 [1] CRAN (R 4.4.1) ##  bit64              4.5.2     2024-09-22 [1] CRAN (R 4.4.1) ##  blob               1.2.4     2023-03-17 [1] CRAN (R 4.4.1) ##  bslib              0.8.0     2024-07-29 [1] CRAN (R 4.4.1) ##  cachem             1.1.0     2024-05-16 [1] CRAN (R 4.4.1) ##  cellranger         1.1.0     2016-07-27 [1] CRAN (R 4.4.1) ##  checkmate          2.3.2     2024-07-29 [1] CRAN (R 4.4.1) ##  cli                3.6.3     2024-06-21 [1] CRAN (R 4.4.1) ##  clusterProfiler    4.12.6    2024-08-25 [1] Bioconductor 3.19 (R 4.4.1) ##  codetools          0.2-20    2024-03-31 [2] CRAN (R 4.4.1) ##  colorspace         2.1-1     2024-07-26 [1] CRAN (R 4.4.1) ##  cowplot            1.1.3     2024-01-22 [1] CRAN (R 4.4.1) ##  crayon             1.5.3     2024-06-20 [1] CRAN (R 4.4.1) ##  curl               5.2.3     2024-09-20 [1] CRAN (R 4.4.1) ##  data.table         1.16.2    2024-10-10 [1] CRAN (R 4.4.2) ##  DBI                1.2.3     2024-06-02 [1] CRAN (R 4.4.1) ##  decoupleR          2.10.0    2024-06-16 [1] Bioconductor 3.19 (R 4.4.0) ##  desc               1.4.3     2023-12-10 [1] CRAN (R 4.4.1) ##  digest             0.6.37    2024-08-19 [1] CRAN (R 4.4.1) ##  DOSE               3.30.5    2024-09-01 [1] Bioconductor 3.19 (R 4.4.1) ##  dplyr            * 1.1.4     2023-11-17 [1] CRAN (R 4.4.1) ##  enrichplot         1.24.4    2024-09-01 [1] Bioconductor 3.19 (R 4.4.1) ##  evaluate           1.0.1     2024-10-10 [1] CRAN (R 4.4.2) ##  farver             2.1.2     2024-05-13 [1] CRAN (R 4.4.1) ##  fastmap            1.2.0     2024-05-15 [1] CRAN (R 4.4.1) ##  fastmatch          1.1-4     2023-08-18 [1] CRAN (R 4.4.0) ##  fgsea              1.33.1    2024-12-19 [1] Github (ctlab/fgsea@da4b3b8) ##  forcats          * 1.0.0     2023-01-29 [1] CRAN (R 4.4.1) ##  fs                 1.6.4     2024-04-25 [1] CRAN (R 4.4.1) ##  generics           0.1.3     2022-07-05 [1] CRAN (R 4.4.1) ##  GenomeInfoDb       1.40.1    2024-06-16 [1] Bioconductor 3.19 (R 4.4.0) ##  GenomeInfoDbData   1.2.12    2024-09-27 [1] Bioconductor ##  ggforce            0.4.2     2024-02-19 [1] CRAN (R 4.4.1) ##  ggfun              0.1.7     2024-10-24 [1] CRAN (R 4.4.2) ##  ggnewscale         0.5.0     2024-07-19 [1] CRAN (R 4.4.1) ##  ggplot2          * 3.5.1     2024-04-23 [1] CRAN (R 4.4.1) ##  ggplotify          0.1.2     2023-08-09 [1] CRAN (R 4.4.1) ##  ggraph             2.2.1     2024-03-07 [1] CRAN (R 4.4.1) ##  ggrepel            0.9.6     2024-09-07 [1] CRAN (R 4.4.1) ##  ggtree             3.12.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  glue               1.7.0     2024-01-09 [1] CRAN (R 4.4.1) ##  GO.db              3.19.1    2024-09-27 [1] Bioconductor ##  GOSemSim           2.30.2    2024-08-21 [1] Bioconductor 3.19 (R 4.4.1) ##  graphlayouts       1.2.0     2024-09-24 [1] CRAN (R 4.4.1) ##  gridExtra          2.3       2017-09-09 [1] CRAN (R 4.4.1) ##  gridGraphics       0.5-1     2020-12-13 [1] CRAN (R 4.4.1) ##  gson               0.1.0     2023-03-07 [1] CRAN (R 4.4.1) ##  gtable             0.3.6     2024-10-25 [1] CRAN (R 4.4.2) ##  hms                1.1.3     2023-03-21 [1] CRAN (R 4.4.1) ##  htmltools          0.5.8.1   2024-04-04 [1] CRAN (R 4.4.1) ##  htmlwidgets        1.6.4     2023-12-06 [1] CRAN (R 4.4.1) ##  httr               1.4.7     2023-08-15 [1] CRAN (R 4.4.1) ##  httr2              1.0.5     2024-09-26 [1] CRAN (R 4.4.1) ##  igraph             2.1.1     2024-10-19 [1] CRAN (R 4.4.2) ##  IRanges            2.38.1    2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) ##  jquerylib          0.1.4     2021-04-26 [1] CRAN (R 4.4.1) ##  jsonlite           1.8.9     2024-09-20 [1] CRAN (R 4.4.1) ##  KEGGREST           1.44.1    2024-06-19 [1] Bioconductor 3.19 (R 4.4.0) ##  knitr              1.49      2024-11-08 [1] CRAN (R 4.4.2) ##  labeling           0.4.3     2023-08-29 [1] CRAN (R 4.4.0) ##  later              1.3.2     2023-12-06 [1] CRAN (R 4.4.1) ##  lattice            0.22-6    2024-03-20 [2] CRAN (R 4.4.1) ##  lazyeval           0.2.2     2019-03-15 [1] CRAN (R 4.4.1) ##  lifecycle          1.0.4     2023-11-07 [1] CRAN (R 4.4.1) ##  logger             0.4.0     2024-10-22 [1] CRAN (R 4.4.2) ##  lubridate        * 1.9.3     2023-09-27 [1] CRAN (R 4.4.1) ##  magrittr           2.0.3     2022-03-30 [1] CRAN (R 4.4.1) ##  MASS               7.3-60.2  2024-04-26 [2] CRAN (R 4.4.1) ##  Matrix             1.7-0     2024-04-26 [2] CRAN (R 4.4.1) ##  memoise            2.0.1     2021-11-26 [1] CRAN (R 4.4.1) ##  munsell            0.5.1     2024-04-01 [1] CRAN (R 4.4.1) ##  nlme               3.1-164   2023-11-27 [2] CRAN (R 4.4.1) ##  OmnipathR          3.15.2    2024-12-13 [1] Bioconductor ##  parallelly         1.38.0    2024-07-27 [1] CRAN (R 4.4.1) ##  patchwork          1.3.0     2024-09-16 [1] CRAN (R 4.4.1) ##  pillar             1.10.1    2025-01-07 [1] CRAN (R 4.4.1) ##  pkgconfig          2.0.3     2019-09-22 [1] CRAN (R 4.4.1) ##  pkgdown            2.1.1     2024-09-17 [1] CRAN (R 4.4.1) ##  plyr               1.8.9     2023-10-02 [1] CRAN (R 4.4.1) ##  png                0.1-8     2022-11-29 [1] CRAN (R 4.4.0) ##  polyclip           1.10-7    2024-07-23 [1] CRAN (R 4.4.1) ##  prettyunits        1.2.0     2023-09-24 [1] CRAN (R 4.4.1) ##  progress           1.2.3     2023-12-06 [1] CRAN (R 4.4.1) ##  purrr            * 1.0.2     2023-08-10 [1] CRAN (R 4.4.1) ##  qvalue             2.36.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  R.methodsS3        1.8.2     2022-06-13 [1] CRAN (R 4.4.0) ##  R.oo               1.27.0    2024-11-01 [1] CRAN (R 4.4.1) ##  R.utils            2.12.3    2023-11-18 [1] CRAN (R 4.4.1) ##  R6                 2.5.1     2021-08-19 [1] CRAN (R 4.4.1) ##  ragg               1.3.3     2024-09-11 [1] CRAN (R 4.4.1) ##  rappdirs           0.3.3     2021-01-31 [1] CRAN (R 4.4.1) ##  RColorBrewer       1.1-3     2022-04-03 [1] CRAN (R 4.4.0) ##  Rcpp               1.0.13    2024-07-17 [1] CRAN (R 4.4.1) ##  readr            * 2.1.5     2024-01-10 [1] CRAN (R 4.4.1) ##  readxl             1.4.3     2023-07-06 [1] CRAN (R 4.4.1) ##  reshape2           1.4.4     2020-04-09 [1] CRAN (R 4.4.1) ##  rlang              1.1.4     2024-06-04 [1] CRAN (R 4.4.1) ##  rmarkdown          2.29      2024-11-04 [1] CRAN (R 4.4.2) ##  RSQLite            2.3.7     2024-05-27 [1] CRAN (R 4.4.1) ##  rstudioapi         0.17.1    2024-10-22 [1] CRAN (R 4.4.2) ##  rvest              1.0.4     2024-02-12 [1] CRAN (R 4.4.1) ##  S4Vectors          0.42.1    2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) ##  sass               0.4.9     2024-03-15 [1] CRAN (R 4.4.1) ##  scales             1.3.0     2023-11-28 [1] CRAN (R 4.4.1) ##  scatterpie         0.2.4     2024-08-28 [1] CRAN (R 4.4.1) ##  selectr            0.4-2     2019-11-20 [1] CRAN (R 4.4.1) ##  sessioninfo        1.2.2     2021-12-06 [1] CRAN (R 4.4.1) ##  shadowtext         0.1.4     2024-07-18 [1] CRAN (R 4.4.1) ##  SiRCleR          * 1.1.0     2025-01-08 [1] Github (ArianeMora/SiRCleR@ca82db8) ##  stringi            1.8.4     2024-05-06 [1] CRAN (R 4.4.0) ##  stringr          * 1.5.1     2023-11-14 [1] CRAN (R 4.4.1) ##  systemfonts        1.1.0     2024-05-15 [1] CRAN (R 4.4.1) ##  textshaping        0.4.0     2024-05-24 [1] CRAN (R 4.4.1) ##  tibble           * 3.2.1     2023-03-20 [1] CRAN (R 4.4.1) ##  tidygraph          1.3.1     2024-01-30 [1] CRAN (R 4.4.1) ##  tidyr            * 1.3.1     2024-01-24 [1] CRAN (R 4.4.1) ##  tidyselect         1.2.1     2024-03-11 [1] CRAN (R 4.4.1) ##  tidytree           0.4.6     2023-12-12 [1] CRAN (R 4.4.1) ##  tidyverse        * 2.0.0     2023-02-22 [1] CRAN (R 4.4.1) ##  timechange         0.3.0     2024-01-18 [1] CRAN (R 4.4.1) ##  treeio             1.28.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  tweenr             2.0.3     2024-02-26 [1] CRAN (R 4.4.1) ##  tzdb               0.4.0     2023-05-12 [1] CRAN (R 4.4.1) ##  UCSC.utils         1.0.0     2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  vctrs              0.6.5     2023-12-01 [1] CRAN (R 4.4.1) ##  viridis            0.6.5     2024-01-29 [1] CRAN (R 4.4.1) ##  viridisLite        0.4.2     2023-05-02 [1] CRAN (R 4.4.1) ##  vroom              1.6.5     2023-12-05 [1] CRAN (R 4.4.1) ##  withr              3.0.2     2024-10-28 [1] CRAN (R 4.4.2) ##  xfun               0.49      2024-10-31 [1] CRAN (R 4.4.2) ##  XML                3.99-0.17 2024-06-25 [1] CRAN (R 4.4.1) ##  xml2               1.3.6     2023-12-04 [1] CRAN (R 4.4.1) ##  XVector            0.44.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  yaml               2.3.10    2024-07-26 [1] CRAN (R 4.4.1) ##  yulab.utils        0.1.8     2024-11-07 [1] CRAN (R 4.4.2) ##  zip                2.3.1     2024-01-27 [1] CRAN (R 4.4.1) ##  zlibbioc           1.50.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.0) ##  ##  [1] C:/Users/chris/AppData/Local/R/win-library/4.4 ##  [2] C:/Program Files/R/R-4.4.1/library ##  ## ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ariane Mora. Author. Christina Schmidt. Author, maintainer. Brad Balderson. Author. Christian Frezza. Author. Mikael Boden. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mora , Schmidt C, Balderson B, Frezza C, Boden M (2025). SiRCleR: Signature Regulatory Clustering. R package version 1.1.0.","code":"@Manual{,   title = {SiRCleR: Signature Regulatory Clustering},   author = {Ariane Mora and Christina Schmidt and Brad Balderson and Christian Frezza and Mikael Boden},   year = {2025},   note = {R package version 1.1.0}, }"},{"path":"/index.html","id":"short-introduction","dir":"","previous_headings":"","what":"Signature Regulatory Clustering","title":"Signature Regulatory Clustering","text":"Signature Regulatory Clustering (SiRCle) method first released biorxiv preprint since enhanced method part revision genome medicine. SiRCle method first developed 2022 integrate DNA methylation, RNA-seq proteomics data gene level deconvolute association dysregulation within across possible regulatory layers (DNA methylation, transcription /translation). results study published biorxiv shared effort Mora & Schmidt et. al.. part revisions Genome Medicine, updated parts SiRCle clustering method extended methods section manuscript. also added new data PanCan analysis. can found Mora&Schmidt et al. [@Mora_Schmidt2024].  can find detailed code manuscripts website SiRCleManuscript GitHub repository. SiRCle uses logical regulatory rules, sircleRCM group genes SiRCle clusters based data layer (DNA methylation, transcription /translation) dys-regulation first occurs. Using output sircleRCM, SiRCle clusters, one can find primary biological processes altered applying Representation Analysis (ORA) drivers behind using Transcription Factor (TF) analysis. Lastly, compare patient’s subsets (e.g. based stage), found integrating across data layers prior performing differential analysis biological enrichment better captures biological signal. Hence use variational autoencoder (VAE) learn gene-wise relationships across three data layers obtain integrated value gene (sircleVAE). Using integrated value next perform Mann-Whitney U test identify genes significant integrated difference patient’s groups.","code":""},{"path":"/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"Signature Regulatory Clustering","text":"generated several vignettes showcasing usage SiRCleR using publicly available datasets manuscript Mora&Schmidt et al., included example data within SiRCleR. can find tutorial top “Tutorials” button, can follow specific user case example learn choose settings including Background Method, input data thresholds Regulation Grouping. can also follow links : * ChooseSettings * DataAnalysisExample seeking also apply variational autoencoder SiRCle clustering output, please visit python package use reticulate R. can find python package Python SiRCle.","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Signature Regulatory Clustering","text":"SiRCleR R package. 1. Install Rtools haven’t done yet, using appropriate version (e.g.windows macOS). 2. Install latest development version GitHub : SiRCleR package direcly R: devtools::install_github(\"https://github.com/ArianeMora/SiRCleR\")     library(SiRCleR)","code":""},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Signature Regulatory Clustering","text":"done best ensure dependencies documented, aren’t please let us know try resolve .","code":""},{"path":"/index.html","id":"windows-specifications","dir":"","previous_headings":"","what":"Windows specifications","title":"Signature Regulatory Clustering","text":"Note running Windows might issue long paths, can resolve registry Windows 10:Computer Configuration > Administrative Templates > System > Filesystem > Enable Win32 long paths (different version Windows, just google “Long paths fix” Windows version)","code":""},{"path":"/index.html","id":"questions--issues","dir":"","previous_headings":"","what":"Questions & Issues","title":"Signature Regulatory Clustering","text":"Please post questions issues related SiRCleR functions Issues section GitHub repository.","code":""},{"path":"/index.html","id":"reproducibility","dir":"","previous_headings":"","what":"Reproducibility","title":"Signature Regulatory Clustering","text":"want reproduce results publication, please use python package version found : https://doi.org/10.1101/2022.07.02.498058","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Signature Regulatory Clustering","text":"use please cite manuscript Mora&Schmidt et al.. Ariane Mora & Christina Schmidt, Brad Balderson, Christian Frezza & Mikael Bodén. 2024. “SiRCle (Signature Regulatory Clustering) Model Integration Reveals Mechanisms Phenotype Regulation Renal Cancer.” Genome Medicine 16 (1): 144. https://doi.org/10.1186/s13073-024-01415-3.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/sircleORA.html","id":null,"dir":"Reference","previous_headings":"","what":"sircleORA — sircleORA","title":"sircleORA — sircleORA","text":"Uses enricher run ORA clusters defined regulatory labels using prior knowledge gene-sets","code":""},{"path":"/reference/sircleORA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sircleORA — sircleORA","text":"","code":"sircleORA(   InputData,   geneID,   regLabels = \"RegulatoryLabels\",   PriorKnowledge,   PKName = \"\",   emptyRegLabel = \"\",   RemoveBackgroundGenes = \"TRUE\",   Plot_FileType = \"pdf\",   minGSSize = 10,   maxGSSize = 1000,   Plot_p.adj = 0.2,   Plot_Percentage = 10,   OutputFileName = \"\" )"},{"path":"/reference/sircleORA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sircleORA — sircleORA","text":"InputData DF column gene names amd regulatory labels (.e. sircle clusters). Usually output SiRCle RCM functions. geneID Provide column name gene ID InputData. Needs match gene ID pathway file provided regLabels Optional:  Column name column regulatory labels InputData. default: \"RegulatoryLabels\" PriorKnowledge DF including prior knowledge (PK), ie. pathway file. File must include column \"term\" pathway TF-regulon name, column \"gene\" gene name column \"Description\" description depicted plots. PKName Optional:  Name prior knowledge used, .e. pathway name KEGG default: \"\" emptyRegLabel Optional:  Column name empty regulatory group default: \"\" Plot_FileType Optional:  Output file type figures one : \"svg\", \"pdf\", \"png\" default: \"pdf\" minGSSize Optional:  minimum group size ORA default: 10 maxGSSize Optional:  maximum group size ORA default: 1000 Plot_p.adj Optional:  q value cutoff ORA plotted default: 0.2 Plot_Percentage Optional:  Percentage genes detected pathway default: 10 OutputFileName Optional:  Output filename default: \"\" RemoveBackgroundGenesOptional: TRUE, genes fall background based choosen Background method SiRCle RCM removed universe. default: \"TRUE\"","code":""},{"path":"/reference/sircleORA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sircleORA — sircleORA","text":"DF results representation analysis","code":""},{"path":"/reference/sircleRCM_2Cond.html","id":null,"dir":"Reference","previous_headings":"","what":"sircleRCM_2Cond — sircleRCM_2Cond","title":"sircleRCM_2Cond — sircleRCM_2Cond","text":"Computes regulatory clustering model (RCM) using SiRCle regulatory rules two conditions data type.","code":""},{"path":"/reference/sircleRCM_2Cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sircleRCM_2Cond — sircleRCM_2Cond","text":"","code":"sircleRCM_2Cond(   Cond1_File,   Cond2_File,   geneID,   Cond1ValueCol = \"Log2FC\",   Cond1PadjCol = \"padj\",   Cond2ValueCol = \"Log2FC\",   Cond2PadjCol = \"padj\",   Cond1_padj_cutoff = 0.05,   Cond2_padj_cutoff = 0.05,   Cond1_FC_cutoff = 1,   Cond2_FC_cutoff = 0.5,   backgroundMethod = \"C1&C2\",   OutputFileName = \"Sircle_RCM.csv\" )"},{"path":"/reference/sircleRCM_2Cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sircleRCM_2Cond — sircleRCM_2Cond","text":"geneID Column name geneId MUST Input files (join ) Cond1ValueCol Column name log fold change Cond1File Cond1PadjCol Column name p adjusted value Cond1File Cond2ValueCol Column name log fold change Cond2File Cond2PadjCol Column name protein p adjusted value Cond2File backgroundMethod Optional:  Background method \"C1|C2\", \"C1&C2\", \"C2\", \"C1\" \"*\". details method check https://github.com/ArianeMora/SiRCleR/blob/main/vignettes/SiRCle_RCM_Notebook.Rmd Default=\"C1&C2\" Cond1File DF data (results e.g. DeSeq2) Cond2File DF data (results e.g. DeSeq2) Cond1PadjCutoff Optional: Padjusted cutoff forCond1 data Default=0.05 Cond1LogFCCutoff Optional:  LogFoldchange cutoff Cond1 data Default=0.5 Cond2FilePadjCutoff Optional:  Padjusted cutoff Cond2File data Default=0.05 Cond2FileCutoff Optional:  LogFoldchange cutoff Cond2File data Default=0.5 outputFileName Optional:  Output filename Default=SiRCle_RCM.csv","code":""},{"path":"/reference/sircleRCM_2Cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sircleRCM_2Cond — sircleRCM_2Cond","text":"rcm instance rcm package","code":""},{"path":"/reference/sircleRCM_MRP.html","id":null,"dir":"Reference","previous_headings":"","what":"sircleRCM_MRP — sircleRCM_MRP","title":"sircleRCM_MRP — sircleRCM_MRP","text":"Computes regulatory clustering model (RCM) using SiRCle regulatory rules DNA-methylation, RNAseq Proteomics data layers (MRP).","code":""},{"path":"/reference/sircleRCM_MRP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sircleRCM_MRP — sircleRCM_MRP","text":"","code":"sircleRCM_MRP(   methFile,   rnaFile,   protFile,   geneID,   rnaValueCol = \"Log2FC\",   rnaPadjCol = \"padj\",   methValueCol = \"Diff\",   methPadjCol = \"padj\",   proteinValueCol = \"Log2FC\",   proteinPadjCol = \"padj\",   rna_padj_cutoff = 0.05,   prot_padj_cutoff = 0.05,   meth_padj_cutoff = 0.05,   rna_FC_cutoff = 1,   prot_FC_cutoff = 0.5,   meth_Diff_cutoff = 0.1,   backgroundMethod,   OutputFileName = \"Sircle_RCM\" )"},{"path":"/reference/sircleRCM_MRP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sircleRCM_MRP — sircleRCM_MRP","text":"methFile DF DNA methylation data (results differential methylation analysis) rnaFile DF RNAseq data (results DeSeq2 also normalised expression counts) geneID Column name geneId MUST protein, RNAseq DNAmethylation files (join ) rnaValueCol Column name RNA value rnaFile rnaPadjCol Column name RNA p adjusted value rnaFile methValueCol Column name Methylation difference value methFile methPadjCol Column name Methylation p adjusted value methFile proteinValueCol Column name protein log fold change proteinFile proteinPadjCol Column name protein p adjusted value proteinFile backgroundMethod Optional:  Background methods: \"P|(M&R)\", \"P|M|R\", \"P|R\", \"P&R\", \"P&M&R\", \"(P&M)|(P&R)|(M&R)\", \"(P&M)|(P&R)\" \"*\". details methods, please check https://github.com/ArianeMora/SiRCleR/blob/main/vignettes/SiRCle_RCM_Notebook.Rmd Default=\"P|(M&R)\" proteinFile DF Protein data (results DeSeq2 also normalised expression counts) rnaPadjCutoff Optional: Padjusted cutoff RNAseq data Default=0.05 rnaLogFCCutoff Optional:  LogFoldchange cutoff RNAseq data Default=0.5 proteinPadjCutoff Optional:  Padjusted cutoff Protein data Default=0.05 proteinValueCutoff Optional:  LogFoldchange cutoff Protein data Default=0.3 methPadjCutoff Optional:  Padjusted cutoff DNA methylation data Default=0.05 methDiffCutoff Optional:  DNA Methylation difference cutoff DNA methylation Default=10 outputFileName Optional:  Output filename Default=\"SiRCle_RCM\"","code":""},{"path":"/reference/sircleRCM_MRP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sircleRCM_MRP — sircleRCM_MRP","text":"DF input data combined geneID SiRCle Clusters","code":""},{"path":"/reference/sircleRCM_RP.html","id":null,"dir":"Reference","previous_headings":"","what":"sircleRCM_RP — sircleRCM_RP","title":"sircleRCM_RP — sircleRCM_RP","text":"Computes regulatory clustering model (RCM) using SiRCle regulatory rules RNAseq Proteomics data layers (RP).","code":""},{"path":"/reference/sircleRCM_RP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sircleRCM_RP — sircleRCM_RP","text":"","code":"sircleRCM_RP(   rnaFile,   protFile,   geneID,   rnaValueCol = \"Log2FC\",   rnaPadjCol = \"padj\",   proteinValueCol = \"Log2FC\",   proteinPadjCol = \"padj\",   rna_padj_cutoff = 0.05,   prot_padj_cutoff = 0.05,   rna_FC_cutoff = 1,   prot_FC_cutoff = 0.5,   backgroundMethod = \"P&R\",   OutputFileName = \"Sircle_RCM.csv\" )"},{"path":"/reference/sircleRCM_RP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sircleRCM_RP — sircleRCM_RP","text":"rnaFile DF RNAseq data (results DeSeq2 also normalised expression counts) geneID Column name geneId MUST protein, RNAseq DNAmethylation files (join ) rnaValueCol Column name RNA value rnaFile rnaPadjCol Column name RNA p adjusted value rnaFile proteinValueCol Column name protein log fold change proteinFile proteinPadjCol Column name protein p adjusted value proteinFile backgroundMethod Optional:  Background methods: \"P|R\", \"P&R\", \"P\" , \"R\", \"*\". details methods, please check https://github.com/ArianeMora/SiRCleR/blob/main/vignettes/SiRCle_RCM_Notebook.Rmd Default=\"P&R\" proteinFile DF Protein data (results DeSeq2 also normalised expression counts) rnaPadjCutoff Optional: Padjusted cutoff RNAseq data Default=0.05 rnaLogFCCutoff Optional:  LogFoldchange cutoff RNAseq data Default=0.5 proteinPadjCutoff Optional:  Padjusted cutoff Protein data Default=0.05 proteinValueCutoff Optional:  LogFoldchange cutoff Protein data Default=0.3 outputFileName Optional:  Output filename Default=SiRCle_RCM.csv","code":""},{"path":"/reference/sircleRCM_RP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sircleRCM_RP — sircleRCM_RP","text":"rcm instance rcm package","code":""},{"path":"/reference/ToyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Access built-in example data — ToyData","title":"Access built-in example data — ToyData","text":"Import process .csv file create toy data DF.","code":""},{"path":"/reference/ToyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access built-in example data — ToyData","text":"","code":"ToyData(Dataset)"},{"path":"/reference/ToyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access built-in example data — ToyData","text":"Dataset Character: name built-dataset: \"DNA_Methylation\": \"RNAseq\": \"Proteomics\": \"Hallmarks\":","code":""},{"path":"/reference/ToyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access built-in example data — ToyData","text":"data frame containing toy data.","code":""},{"path":"/reference/ToyData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access built-in example data — ToyData","text":"","code":"Proteomics <- SiRCleR::ToyData(\"Proteomics\")"}]
